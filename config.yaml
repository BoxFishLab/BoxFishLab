name: Wingchun.API

# 基础配置文件
basic_config:
  - public_ip_address: "47.100.24.119"                                ### 固定公共服务器ip地址
    public_flask_ip_address: "0.0.0.0"                                ### 固定公共flask内部服务器ip地址
    public_image_floder: "/data/dataset"                              ### 固定图片保存子目录
    public_project_floder: "/Wingchun"                                ### 固定项目的根目录
    default_security_md5: "$Skinrun$_Suessful"                        ### 固定安全验证md5字符:加密方式: timestamps + md5($Skinrun$_Suessful)
  - DESCRIPTION: "aliyun Hyper config"                                ### 更新阿里云oss配置文件
    aliyun_skinrun: "https://e.skinrun.me/upload_img?versions=2.0"    ### 固定上传图片请求地址
    aliyun_face_id: "http://139.196.148.36:8082/set"                  ### 人脸face_id请求地址
    aliyun_face_id_special: "96D9QQR365A21UQXXXMD6MBL4MAF78T3VH19NFKW86BWYCA7ASC8AAZV5BNQQRJY"
    aliyun_member_id: "http://139.196.148.36:8082/get"                ### 人脸member_id请求地址
    aliyun_oss_access: "aliyun.oss2"                                  ### 阿里云
    AccessKeyId: "LNANk5O2kmFluTTY"                                   ### 固定阿里云:oss.KeyId      
    AccessKeySecret: "ciIL3RJyAG7yuQNWbOywnVae7Mswhr"                 ### 固定阿里云:oss.KeySecret
  - DESCRIPTION: "Hardware HyperParameters"                           ### 硬件参数
    public_hardware_gpu_num: 1                                        ### 硬件参数：GPU个数
  
# [停]微信version 1 默认配置文件[2019.12月]
wechat_v1:
  - name: "wechat_v1"
  - server: "aliyun:47.100.24.119"
    ip: "0.0.0.0"
    port: "5070"     # 测试端口
    mode: "product"  # 测试环境debug 生产环境 product
    debug: False     # 框架调试模式

# [新]微信version 2 默认配置文件[2019.12月]
wechat_v2:
  - name: "wechat_v2"             ### 项目名
    versions: "2.0.0"             ### 版本号
  - public_product_port: "5050"   ### 生产端口
    public_debug_port: "7050"     ### 测试端口
    public_open_port: "9050"      ### 开放平台端口
    mode: "PRODUCT"               ### 测试环境:DEBUG;生产环境:PRODUCT;开放平台:OPEN
  - private_time_stamp: "time_stamp"          ### 请求参数:时间戳
    private_passmd5: "passmd5"                ### 请求参数:md5验证，防止抓包
    private_img_base64: "img_base64"          ### 请求参数:图片数据:type(base64)
    private_task_name: "task_name"            ### 请求参数:任务名
    private_age: "age"                        ### [备注]以后会被移除 请求参数:年龄
  - DESCRIPTION: "Basic HyperParameters"      ### 基础参数
    private_model_file: "preModel"            ### 算法参数:模型文件目录
  - DESCRIPTION: "skyolo HyperParameters"     ### 算法参数
    private_skyolo_img: [416, 416, 3]         ### 算法参数:输入图片高，宽，通道
    private_skyolo_score: 0.32                ### 算法参数:置信度得分
    private_skyolo_iou: 0.45                  ### 算法参数:交并比 
    private_skyolo_anchors_path: "yolo/txt/yolo_anchors.txt"          ### 算法参数:anchors框
    private_skyolo_classes_path: "yolo/txt/all_classes.txt"           ### 算法参数:类别
    private_skyolo_model: "yolo/ep096-loss46.391-val_loss50.251.h5"   ### 算法参数:模型文件
  - DESCRIPTION: "classfily HyperParameters"                          ### 分类任务模型文件
    private_black_eye: "Api/wechat_v2/pre_model/eyes_model_80.pb"     ### 算法参数:黑眼圈模型文件
    private_grease: "Api/wechat_v2/pre_model/grease_model_50.pb"      ### 算法参数:油脂模型文件
    private_glasses: "Api/wechat_v2/pre_model/glasses.pb"             ### 算法参数:是否佩戴眼镜模型文件
  - DESCRIPTION: "others HyperParameters"
    private_landmarks_path: "Api/wechat_v2/pre_model/shape_predictor_81_face_landmarks.dat"  ### 算法参数:人脸检测dlib模型文件
    private_pantone_path: Api/wechat_v2/figures/pantone.jpg                                  ### 算法参数:肤色卡图片
    private_pantone_block: 64                                                                ### 算法参数:肤色卡块

# [新] 人脸应用
face:
  - name: "face"                  # 项目名
    version: "1.0"                # 版本号
    public_product_port: "5050"   # 生产端口
    public_debug_port: "7050"     # 测试端口
    public_open_port: "9050"      # 开放平台端口
    mode: "PRODUCT"               # 测试环境:DEBUG;生产环境:PRODUCT;开放平台:OPEN
  - DESCRIPTION: "FaceApply request HyperPara"   ### 请求参数
    private_time_stamp: "time_stamp"             ### 请求参数: 时间戳
    private_passmd5: "verity_md5"                   ### 请求参数: md5验证，防止抓包
    private_img_base64: "img_base64"             ### 请求参数: 图片数据:type(base64)
    private_task_name: "task_name"               ### 请求参数: 任务名 
    private_brand_id: "brand_id"                 ### 请求参数: 品牌ID
    private_store_id: "store_id"                 ### 请求参数: 门店ID
    private_type: "type"                         ### 请求参数: 设备类型
    private_counter: "counter"                   ### 请求参数: 登录计数
    private_lang: "en/zh"                        ### 请求参数: 语言环境
  - DESCRIPTION: "Face Compare HyperParameters"  ### 人脸识别&&检索参数
    private_facedb: "Corelibrary/apply/face/library/"      ### 应用参数: 人脸检索人脸特征数据库           
    private_face_vector: 128                     ### 应用参数: 人脸向量128维
    private_face_tree: 100                       ### 应用参数: 人脸检索树:100    数据量比较少，可以设置在10-100之间
    private_face_num: 5                          ### 应用参数: 人脸最前检索top-5
    private_face_capacity: 10000                 ### 应用参数: 人脸数据库单维度最高10000条;可以按照存储量:最高一个T
    private_face_diff: 0.15                      ### 应用参数: 人脸相似度0.15;值越小越相似 
    private_face_cahe: "cahe.jpg"                ### 应用参数: 人脸登录缓存人脸图片
    private_face_recognition: "preModel/face/mobilefaceNet/mobilefaceNet.pb"                        ### 应用参数: 人脸识别模型:128维向量
    private_oNet: "preModel/mtcnn/ONet_landmark"                                               ### 应用参数: 人脸检测Onet.model
    private_pNet: "preModel/mtcnn/PNet_landmark"                                               ### 应用参数: 人脸检测Pnet.model
    private_rNet: "preModel/mtcnn/RNet_landmark"                                               ### 应用参数: 人脸检测Rnet.model
    private_live_attack: "/data/SkinRun/API/faceload/pre_model/live/train_47_live_2_model.pb"  ### 应用参数: 人脸检测对抗识别模型
  - DESCRIPTION: "Face Color HyperParameters"    ### 人脸应用参数

# [] 全脸皮肤检测
skinrun:
  - name: "skinrun"
    version: "1.0"                               ### 版本号
    public_product_port: "5090"                  ### 生产端口
    public_debug_port: "7090"                    ### 测试端口
    public_open_port: "9090"                     ### 开放平台端口
    mode: "PRODUCT"                              ### 测试环境:DEBUG;生产环境:PRODUCT;开放平台:OPEN
  - DESCRIPTION: "FaceApply request HyperPara"   ### 请求参数
    private_time_stamp: "time_stamp"             ### 请求参数: 时间戳
    private_passmd5: "verity_md5"                ### 请求参数: md5验证，防止抓包
    private_img_url: "img_url"                   ### 请求参数: 图片数据:type(base64)
    private_task_name: "task_name"               ### 请求参数: 任务名 
    private_type: "img_type"                         ### 请求参数: 拍摄图片类型
    private_flag: "1"                            ### 请求参数: 最后返回标志:1;不返回标志:0
    private_lang: "en/zh"                        ### 请求参数: 语言环境
  - DESCRIPTION: "aliyun Hyper config"           ### 更新阿里云oss配置文件  
    End_points: "http://oss-cn-shanghai.aliyuncs.com"                 ### 阿里云:oss.End_points  
    BucketName: "skinrun-face"                                        ### 阿里云:oss.BucketName<wechat_v2在线测肤>
    BucketName_oss: "http://skinrun-library.oss-cn-shanghai.aliyuncs.com/" ###### 阿里云:oss.image存储地址
    Face_BucketName: "skinrun-library"                                ### 阿里云:oss.BucketName<skinrun全脸测肤>
    Face_BucketName_oss: "http://skinrun-library.oss-cn-shanghai.aliyuncs.com/" ###### 阿里云:oss.image存储地址
  - model_file: ""
    Saved_path: "/data/dataset/skinrun"
  

# [] 局部皮肤检测
skinrun_part:
  - name: "skinrun_part"                              ### 项目名
    version: "1.0"                               ### 版本号
    public_product_port: "5090"                  ### 生产端口
    public_debug_port: "7090"                    ### 测试端口
    public_open_port: "9090"                     ### 开放平台端口
    mode: "PRODUCT"                              ### 测试环境:DEBUG;生产环境:PRODUCT;开放平台:OPEN
  - DESCRIPTION: "FaceApply request HyperPara"   ### 请求参数
    private_time_stamp: "time_stamp"             ### 请求参数: 时间戳
    private_passmd5: "verity_md5"                ### 请求参数: md5验证，防止抓包
    private_img_url: "img_url"                   ### 请求参数: 图片数据:type(base64)
    private_task_name: "task_name"               ### 请求参数: 任务名 
    private_type: "img_type"                         ### 请求参数: 拍摄图片类型
    private_flag: "flag"                            ### 请求参数: 最后返回标志:1;不返回标志:0
    private_lang: "en/zh"                        ### 请求参数: 语言环境
  - DESCRIPTION: "aliyun Hyper config"           ### 更新阿里云oss配置文件
    End_points: "http://oss-cn-shanghai.aliyuncs.com"  ### 阿里云:oss.End_points  
    BucketName: "skinrun-part"                   ### 阿里云:oss.BucketName<局部拍照测试>
    BucketName_oss: "https://skinrun-part.oss-cn-shanghai.aliyuncs.com/" ###阿里云:oss外部可访问链接地址
  - DESCRIPTION: "skinrun_part Model HyperPara " ### 更新阿里云oss配置文件
    model_floder: "preModel/skinrun_part/"
    mk: "mk_skin_best_model.tflite"
    ss: "ss_skin_best_model.tflite"
    wl: "wl_skin_best_model.tflite"
    yz: "yz_skin_best_model.tflite"
    mg: "mg_skin_best_model.tflite"
    cc: "cc_skin_best_model.tflite"


# [维护] 异常报错信息
status_code:
  - DESCRIPTION: "Public Request HyperParameters"          ### 应用参数
    SUESSFLUL_Request: "200"                               ### [成功信息]: 操作成功; 
    EXCEPT_Program: "301"                                  ### 异常信息: 程序异常;Check the print LOG *最好不要放过每一个潜在的代码隐患*
    EXCEPT_Algorithm_Program: "302"                        ### 异常信息: 算法异常;
    ERROR_Request_Parameters: "401"                        ### 异常信息: 请求参数错误
    EXCEPT_Request_ImageUpload: "402"                      ### 异常信息: 图片上传异常
    ILLEGAL_FORBIT_Request: "5004"                         ### 「非法信息」: 请求非法禁止
    WEchat_DESCRIPTION: "Wechat Apply HyperParameters"     ### 应用参数
    EXCEPT_NoFace: "600"                                   ### 异常信息: 人脸检测异常
    EXCEPT_FakeFace: "601"                                 ### 异常信息: 造假人脸异常
    EXCEPT_WearGlass: "602"                                ### 异常信息: 佩戴眼镜异常
    EXCEPT_DataValue: "603"                                ### 异常信息: 部分数值异常
    Face_DESCRIPTION: "Face Apply HyperParameters"         ### 应用参数
    EXCEPT_recognition: "201"                              ### 异常信息: 识别异常
    Suessful_add_face: "202"                               ### 成功信息: 注册成功
    EXCEPT_Init_database: "404"                            ### 异常信息: 初始数据库      
    request_dict_ZH: {                                     ### 信息: 中文信息 
      "200":"操作成功","201":"识别异常","202":"注册成功",
      "301":"程序异常","302":"算法异常",
      "401":"请求参数错误","402":"图片上传异常","404":"初始数据库",
      "5004":"请求非法禁止",                                 
      "600":"人脸检测异常","601":"造假人脸异常","602":"佩戴眼镜异常","603":"部分数值异常"                           
    }
    request_dict_EN: {                                     ### 信息: 英文信息
      "200":"SUESSFLUL_Request","201":"EXCEPT_recognition","202":"Suessful_add_face"
      ,"301":"EXCEPT_Program","302":"EXCEPT_Algorithm_Program"
      ,"401":"ERROR_Request_Parameters","402":"EXCEPT_Request_ImageUpload","404":"EXCEPT_Init_database"
      ,"5004":"ILLEGAL_FORBIT_Request"
      ,"600":"EXCEPT_NoFace","601":"EXCEPT_FakeFace","602":"EXCEPT_WearGlass","603":"EXCEPT_DataValue"
    }   

robot:
  - name: auto
  - server: "aliyun:96.24.14.21"
    ip: "0.0.0.0"
    debug_port: "7011"
    product_port: "5011"
    mode: "product"      ### 具体环境生产环境product, 测试环境debug
    debug: False
  - request_name_1: "time_stamp"
    request_name_2: "passmd5"     ### 固定请求参数一
    request_name_3: "detect_floder"  ### 固定请求参数二
    request_name_4: "task_name"   ### 固定请求参数三
    auto_opt_choose: "auto_opt_choose"
  - request_name_1: "path"     ### 固定请求参数一
    request_name_2: "time"  ### 固定请求参数二
    request_name_3: "passmd5"   ### 固定请求参数三
    auto_opt_choose: "auto_opt_choose"
  - detect_floder_root: "/data/dataset"
    detect_floder_log: "/skinrunLab/debug/Request_log"
    detect_floder_wechat: "/skinrunLab/debug/Request_log"
  - ip_address: "39.106.32.213"
    username: "root"
    password: "deflover(Self*0421)"
    port: 22
    header: ""
  - ip_address: "47.96.24.14"
    username: "root"
    password: "skinMachine_2019"
    port: 22
    header: ""
  - dataroot: "/data/"
    img_floder: "wechat"
    local_img: "/home/liuwei/Documents/AutoRobots/data"
    local_loggle_path: "/home/liuwei/Documents/AutoRobots/lib/loggle/logfile/"

